
SELECT TOP 0 *
INTO loadf.T_LOAD_FACTOR_RECUPERO
FROM loadf.FACT_LOAD_FACTOR;

-- aggiunta campo source per tracciabilità
ALTER TABLE loadf.T_LOAD_FACTOR_RECUPERO
ADD SOURCE VARCHAR(20);

-- popolamento della tabella con dati mancanti
INSERT INTO loadf.T_LOAD_FACTOR_RECUPERO (
    FK_VETTORE,
    FK_DORSALE,
    FK_OD,
    FK_NODO_PARTENZA,
    FK_NODO_ARRIVO,
    FK_DATA_RILEVAZIONE,
    FK_ORARIO_ARRIVO,
    FK_ORARIO_PARTENZA,
    FK_LIVELLO_SERVIZIO,
    POSTI_DISPONIBILI,
    POSTI_OCCUPATI,
    FK_STATO_LOADF,
    PROGRESSIVO_FERMATE,
    TIPOLOGIA,
    SOURCE
	)
SELECT
    v.PK_VETTORE,        
    d.PK_DORSALE,                    
    od.PK_OD,                
	np.PK_NODO,  
    na.PK_NODO,   
    CAST(FORMAT(s.DATA_RILEVAZIONE, 'yyyyMMdd') AS INT),      
    or_arr.PK_ORARIO,                      
    or_part.PK_ORARIO, 
    ls.PK_LIVELLO_SERVIZIO,  
    f.POSTI_DISPONIBILI,                 
    f.POSTI_OCCUPATI,  
    -1,                    -- STATO_LOADF "N/A" 
    s.PROGRESSIVO_FERMATE,
    s.TIPOLOGIA,
    'MANCANTE'              
FROM loadf.T_LOAD_FACTOR_SCRAPER_RUN as s

-- JOIN vettore 
LEFT JOIN dwh.DIM_VETTORE v 
  ON s.CODICE_VETTORE = v.CODICE_VETTORE

-- JOIN dorsale
LEFT JOIN (
    SELECT DISTINCT CODICE_VETTORE, DORSALE
    FROM loadf.T_ANAG_LOADF
    WHERE FLAG_ACTIVE = 1
) a ON s.CODICE_VETTORE = a.CODICE_VETTORE
LEFT JOIN loadf.DIM_DORSALE d ON a.DORSALE = d.NOME_DORSALE

-- JOIN per nodo partenza
LEFT JOIN (
    SELECT DISTINCT COD_NODO, COD_NODO_STANDARD
    FROM dwh.MAP_NODO
) map_np ON s.CODICE_NODO_PARTENZA = map_np.COD_NODO
LEFT JOIN dwh.DIM_NODO np ON map_np.COD_NODO_STANDARD = np.CODICE_NODO

-- JOIN per nodo arrivo
LEFT JOIN (
    SELECT DISTINCT COD_NODO, COD_NODO_STANDARD
    FROM dwh.MAP_NODO
) map_na ON s.CODICE_NODO_ARRIVO = map_na.COD_NODO
LEFT JOIN dwh.DIM_NODO na ON map_na.COD_NODO_STANDARD = na.CODICE_NODO

-- JOIN per livello servizio
LEFT JOIN (
    SELECT DISTINCT COD_LIVELLO_SERVIZIO, COD_LIVELLO_SERVIZIO_STANDARD
    FROM dwh.MAP_LIVELLO_SERVIZIO
) mls ON s.COD_LIVELLO_SERVIZIO = mls.COD_LIVELLO_SERVIZIO
LEFT JOIN dwh.DIM_LIVELLO_SERVIZIO ls 
    ON mls.COD_LIVELLO_SERVIZIO_STANDARD = ls.CODICE_LIVELLO_SERVIZIO

-- JOIN FATTI
LEFT JOIN (
    SELECT DISTINCT
        FK_VETTORE,
        FK_OD,
        FK_ORARIO_PARTENZA,
        FK_ORARIO_ARRIVO,
        FK_DATA_RILEVAZIONE,
        FK_LIVELLO_SERVIZIO,
        PROGRESSIVO_FERMATE,
        POSTI_DISPONIBILI,
        POSTI_OCCUPATI,
        FK_STATO_LOADF
    FROM loadf.FACT_LOAD_FACTOR 
	) f 
  ON f.FK_VETTORE = v.PK_VETTORE
 AND f.FK_DATA_RILEVAZIONE = CAST(FORMAT(s.DATA_RILEVAZIONE, 'yyyyMMdd') AS INT)
 AND f.PROGRESSIVO_FERMATE = s.PROGRESSIVO_FERMATE
 AND f.FK_LIVELLO_SERVIZIO = ls.PK_LIVELLO_SERVIZIO

 -- JOIN OD E ORARIO
 LEFT JOIN dwh.DIM_OD od ON f.FK_OD = od.PK_OD
 LEFT JOIN dwh.DIM_ORARIO or_part ON f.FK_ORARIO_PARTENZA = or_part.PK_ORARIO
 LEFT JOIN dwh.DIM_ORARIO or_arr ON f.FK_ORARIO_ARRIVO = or_arr.PK_ORARIO

 -- FILTRI
WHERE s.FLAG_ACTIVE = 1
  AND NOT EXISTS (
      SELECT 1
      FROM loadf.T_LOAD_FACTOR_PARSED_JSON p
      WHERE p.ID_RUN = s.ID_RUN
  )
  AND NOT EXISTS (
      SELECT 1
      FROM loadf.T_LOAD_FACTOR_OUTPUT_STG_REJECTED r
      WHERE r.ID_RUN = s.ID_RUN
  );
  


truncate table loadf.T_LOAD_FACTOR_RECUPERO

select  * from  loadf.T_LOAD_FACTOR_RECUPERO


